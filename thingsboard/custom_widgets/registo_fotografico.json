{
  "fqn": "registo_fotografico",
  "name": "Registo Fotografico",
  "deprecated": false,
  "image": null,
  "description": null,
  "descriptor": {
    "type": "latest",
    "sizeX": 7.5,
    "sizeY": 3,
    "resources": [],
    "templateHtml": "<div id=\"titulo\">\n    Registro Fotografico\n</div>\n\n<div id=\"contenedor\">\n    <div id=\"contenedorTabla\">\n        <table>\n            <thead >\n                <tr>\n                    <th> Nro </th>\n                    <th> Fecha </th>\n                </tr>  \n            </thead>\n            <tbody id=tabla></tbody>\n        </table>\n    </div>\n    <div id=\"contenedorFoto\">\n        <p> Foto Seleccionada </p>\n        <div id=\"subcontenedorFoto\"></div>\n    </div>\n</div>",
    "templateCss": "#container {\n    overflow: auto;\n}\n\n#titulo {\n    padding: 15px;\n}\n\ntable, th, tr, td {\n    border-bottom: 1px solid LightGray;\n    text-align: center;\n    padding: 12px;\n}\n\ntable {\n width: 100%;\n border-collapse: collapse;\n}\n\ntr, td {\n    border-collapse: collapse;\n}\n\nth {\n    color: gray;\n    font-size: 0.9rem;\n}\n\n.item:hover {\n    background-color: rgb(230, 230, 230);\n    cursor: pointer;\n}\n\n#contenedor {\n    display: flex;\n}\n\n#contenedorTabla {\n    width: 40%;\n    margin-left: 10px;\n}\n\n#contenedorFoto {\n    text-align: center;\n    flex-grow: 1;\n}\n\n#subcontenedorFoto {\n    border-collapse: collapse;\n    border: 1px solid LightGray;\n    margin: 50px;\n}",
    "controllerScript": "// Imagen cuando no hau imagen seleccionada\nconst noImagen = \"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\";\n\nvar imgSeleccionada = noImagen;\n\nself.onInit = function() {\n    \n    self.ctx.hideTitlePanel = true; \n    self.ctx.$scope.datasources = self.ctx.defaultSubscription.datasources; // Definir datasources igual al de la defaultSubscription\n    self.ctx.$scope.data = self.ctx.defaultSubscription.data; // Definir data igual al de la defaultSubscription\n    \n    self.ctx.$scope.datasourceData = [];\n    \n    var currentDatasource = null;\n    var currentDatasourceIndex = -1;\n    \n    for (var i=0;i<self.ctx.$scope.data.length;i++) {\n        var dataKeyData = self.ctx.$scope.data[i];\n        if (dataKeyData.datasource != currentDatasource) {\n            currentDatasource = dataKeyData.datasource\n            currentDatasourceIndex++;\n            self.ctx.$scope.datasourceData[currentDatasourceIndex] = [];\n            \n        } \n        self.ctx.$scope.datasourceData[currentDatasourceIndex].push(dataKeyData);\n    }\n    self.ctx.updateWidgetParams();\n    \n    self.onResize();\n    \n    actualizarFoto();\n}\n\nself.onDataUpdated = function() {\n   actualizarTabla(self.ctx.data);\n}\n\nself.onResize = function() {\n   \n}\n\nself.onDestroy = function() {\n}\n\nfunction actualizarTabla(data) {\n    \n    // Obtengo el JSON con los productos\n    let registro = data[0][\"data\"];\n\n    // Obtengo cuerpo de tabla donde poner cada producto\n    let tabla = document.getElementById(\"tabla\");\n        \n    // Limpio el cuerpo de la tabla\n    tabla.innerHTML = '';\n    \n    // Si no hay datos indico que no hay y salgo\n    if (registro.length <= 0 || registro[0].length <= 1) {\n        \n        let row = document.createElement(\"tr\");\n        row.innerHTML = \"El registro esta vacio\";\n        tabla.appendChild(row);\n        \n    } else {\n        \n        registro = JSON.parse(registro[0][1]);\n        \n        let nro = 1;\n        for (let key in registro)\n        {\n            let foto = registro[key];\n    \n            let fecha = new Date(foto[\"ts\"] * 1000);\n\n            let row = document.createElement(\"tr\");\n            \n            let celdaNro = document.createElement(\"td\");\n            celdaNro.innerHTML = nro;\n            \n            let celdaFecha = document.createElement(\"td\");\n            celdaFecha.innerHTML = fecha.toLocaleDateString(\"es-ES\");\n            \n            row.appendChild(celdaNro);\n            row.appendChild(celdaFecha);\n            row.className = \"item\" // para CSS\n            \n            tabla.appendChild(row);\n            \n            nro++;\n        }\n        \n        // Seleccionar imagen al hacer click\n        $('#tabla').on('click', 'tr', function(e) {\n            \n            // Obtengo nro del registro seleccionado\n            let nro = this.childNodes[0].innerHTML;\n            console.log(nro);\n            \n            // Obtengo base64 de registro seleccionado\n            let i = 1;\n            for (let key in registro) {\n                \n                let foto = registro[key];\n                \n                if (i == nro) {\n                    imgSeleccionada = foto['base64'];\n                    break;\n                }\n                \n                i++;\n            }        \n            \n            actualizarFoto();\n        })\n    }\n}\n\nfunction actualizarFoto() {\n    \n    console.log(imgSeleccionada);\n    \n    let subcontenedorFoto = document.getElementById(\"subcontenedorFoto\");\n    subcontenedorFoto.innerHTML = `<img src=\"data:image/png;base64, ${imgSeleccionada}\"/>`;\n} ",
    "settingsSchema": "{}",
    "dataKeySettingsSchema": "{}\n",
    "defaultConfig": "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":true,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{},\"title\":\"Attributes card\"}"
  },
  "externalId": null,
  "tags": null
}